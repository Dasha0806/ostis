scp_program -> proc_area_transformation (*
->rrel_params: .proc_area_transformation_params (*
	->rrel_1: rrel_in: _parameter;;
	->rrel_2: rrel_in: _answer;;
	*);;
->rrel_operators: .proc_area_transformation_operator_set (*
	->rrel_init: .proc_area_transformation_print_init (*
	<-printNl;;
	-> rrel_1: rrel_fixed: rrel_scp_const: [Agent begin];;

	=> nrel_goto: .proc_area_transformation_species_loop_init;;
	*);;
	//TODO check if not first time

	-> .proc_area_transformation_species_loop_init (*
	<- searchSetStr3;;
	-> rrel_1: rrel_fixed: rrel_scp_const: concept_species;;
	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
	-> rrel_3: rrel_assign: rrel_node: rrel_scp_var: _elem;;
	-> rrel_set_3: rrel_assign: rrel_scp_var: _species;;

	=>nrel_then: .proc_area_transformation_species_loop_iter;;
	=>nrel_else: .proc_area_transformation_operator_return;;
	*);;

	-> .proc_area_transformation_species_loop_iter (*
	<- searchElStr3;;
	-> rrel_1: rrel_fixed: rrel_scp_var: _species;;
	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _species_arc;;
	-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: _specie;;

	=> nrel_then: .proc_region_transformation_print_specie_name;;
	=> nrel_else: .proc_area_transformation_species_loop_free;;
	*);;

	-> .proc_area_transformation_species_loop_next (*
	<- eraseEl;;
	-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _species_arc;;

	=> nrel_goto: .proc_area_transformation_species_loop_iter;;
	*);;

	-> .proc_area_transformation_species_loop_free (*
	<- eraseEl;;
	-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _species;;

	=> nrel_goto: .proc_area_transformation_operator_return;;
	*);;


	-> .proc_region_transformation_print_specie_name (*
	<-printNl;;
	-> rrel_1: rrel_fixed: rrel_scp_const: [spicie];;

	=> nrel_goto: .proc_area_transformation_spread_search;;
	*);;

	-> .proc_area_transformation_spread_search (*
	<- searchElStr5;;
	-> rrel_1: rrel_assign: rrel_scp_var: _spread_set;;
	-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc;;
	-> rrel_3: rrel_fixed: rrel_scp_var: _specie;;
	-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
	-> rrel_5: rrel_fixed: rrel_scp_const: nrel_spread;;
	=> nrel_then: .proc_area_transformation_bunch_search;;
	=> nrel_else: .proc_area_transformation_species_loop_next;;
	*);;

	-> .proc_area_transformation_bunch_search (*
	<- searchElStr5;;
	-> rrel_1: rrel_assign: rrel_scp_var: _bunch;;
	-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc;;
	-> rrel_3: rrel_fixed: rrel_scp_var: _spread_set;;
	-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
	-> rrel_5: rrel_fixed: rrel_scp_const: nrel_combination;;
	=> nrel_then: .proc_area_transformation_territories_loop_init;;
	=> nrel_else: .proc_area_transformation_species_loop_next;;//TODO checking if 1 area
	*);;


	-> .proc_area_transformation_territories_loop_init (*
	<- searchSetStr3;;
	-> rrel_1: rrel_fixed: rrel_scp_var: _bunch;;
	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
	-> rrel_3: rrel_assign: rrel_node: rrel_scp_var: _elem;;
	-> rrel_set_3: rrel_assign: rrel_scp_var: _territories;;

	=>nrel_then: .proc_area_transformation_territories_loop_iter;;
	=>nrel_else: .proc_area_transformation_species_loop_next;;
	*);;

	-> .proc_area_transformation_territories_loop_iter (*
	<- searchElStr3;;
	-> rrel_1: rrel_fixed: rrel_scp_var: _territories;;
	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _territories_arc;;
	-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: _territory;;

	=> nrel_then: .proc_area_transformation_if_territory_is_state;;
	=> nrel_else: .proc_area_transformation_territories_loop_free;;
	*);;

	-> .proc_area_transformation_territories_loop_next (*
	<- eraseEl;;
	-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _territories_arc;;

	=> nrel_goto: .proc_area_transformation_territories_loop_iter;;
	*);;

	-> .proc_area_transformation_territories_loop_free (*
	<- eraseEl;;
	-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _territories;;

	=> nrel_goto: .proc_area_transformation_species_loop_next;;
	*);;


	-> .proc_area_transformation_if_territory_is_state (*
	<- searchElStr3;;
	-> rrel_1: rrel_fixed: rrel_scp_const: concept_state;;
	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
	-> rrel_3: rrel_fixed: rrel_scp_var: rrel_node: _territory;;

	=> nrel_then: .proc_area_transformation_state_get_bunch;;
	=> nrel_else: .proc_region_transformation_call_2_subprogramm;;
	*);;

	-> .proc_area_transformation_state_get_bunch (*//TODO multi intersection
	<- searchElStr5;;
	-> rrel_1: rrel_assign: rrel_scp_var: _territory_bunch;;
	-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc;;
	-> rrel_3: rrel_fixed: rrel_node: rrel_scp_var: _territory;;
	-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc2;;
	-> rrel_5: rrel_fixed: rrel_scp_const: nrel_intersection;;

	=>nrel_then: .proc_area_transformation_state_loop_init;;
	=>nrel_else: .proc_area_transformation_territories_loop_next;;
	*);;


	-> .proc_area_transformation_state_loop_init (*
	<- searchSetStr3;;
	-> rrel_1: rrel_fixed: rrel_scp_var: _territory_bunch;;
	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
	-> rrel_3: rrel_assign: rrel_node: rrel_scp_var: _elem;;
	-> rrel_set_3: rrel_assign: rrel_scp_var: _regions;;

	=>nrel_then: .proc_area_transformation_state_loop_iter;;
	=>nrel_else: .proc_area_transformation_territories_loop_next;;
	*);;

	-> .proc_area_transformation_state_loop_iter (*
	<- searchElStr3;;
	-> rrel_1: rrel_fixed: rrel_scp_var: _regions;;
	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _regions_arc;;
	-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: _region;;

	=> nrel_then: .proc_region_transformation_if_region_in_bunch;;
	=> nrel_else: .proc_area_transformation_state_loop_free;;
	*);;

	-> .proc_area_transformation_state_loop_next (*
	<- eraseEl;;
	-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _regions_arc;;

	=> nrel_goto: .proc_area_transformation_state_loop_iter;;
	*);;

	-> .proc_area_transformation_state_loop_free (*
	<- eraseEl;;
	-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _regions;;

	=> nrel_goto: .proc_area_transformation_territories_loop_next;;
	*);;


	-> .proc_region_transformation_if_region_in_bunch (*
	<- searchElStr3;;
	-> rrel_1: rrel_fixed: rrel_scp_var: _bunch;;
	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
	-> rrel_3: rrel_fixed: rrel_scp_var: rrel_node: _region;;

	=> nrel_then: .proc_area_transformation_state_loop_next;;
	=> nrel_else: .proc_region_transformation_gen_ark_to_region;;
	*);;

	-> .proc_region_transformation_gen_ark_to_region (*
	<- genElStr3;;
	-> rrel_1: rrel_fixed: rrel_scp_var: _bunch;;
	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
	-> rrel_3: rrel_fixed: rrel_scp_var: _region;;

	=> nrel_goto: .proc_region_transformation_call_1_subprogramm;;
	*);;


	-> .proc_region_transformation_call_1_subprogramm (*
	<- call;;
	-> rrel_1: rrel_fixed: rrel_scp_const: proc_region_transformation;;
	-> rrel_2: rrel_fixed: rrel_scp_const: proc_region_transformation_call_1_subprogramm_params
	(*
		-> rrel_1: rrel_fixed: rrel_scp_var: _region;;
		-> rrel_2: rrel_fixed: rrel_scp_var: _bunch;;
	*);;
	-> rrel_3: rrel_assign: rrel_scp_var: _desrc;;
	=> nrel_goto: .proc_region_transformation_waitReturn_1_subprogramm;;
	*);;

	-> .proc_region_transformation_waitReturn_1_subprogramm (*
	<- waitReturn;;
	-> rrel_1: rrel_fixed: rrel_scp_var: _desrc;;
	=> nrel_goto: .proc_area_transformation_state_loop_next;;
	*);;


	-> .proc_region_transformation_call_2_subprogramm (*
	<- call;;
	-> rrel_1: rrel_fixed: rrel_scp_const: proc_region_transformation;;
	-> rrel_2: rrel_fixed: rrel_scp_const: proc_region_transformation_call_2_subprogramm_params
	(*
		-> rrel_1: rrel_fixed: rrel_scp_var: _territory;;
		-> rrel_2: rrel_fixed: rrel_scp_var: _bunch;;
	*);;
	-> rrel_3: rrel_assign: rrel_scp_var: _desrc;;
	=> nrel_goto: .proc_region_transformation_waitReturn_2_subprogramm;;
	*);;

	-> .proc_region_transformation_waitReturn_2_subprogramm (*
	<- waitReturn;;
	-> rrel_1: rrel_fixed: rrel_scp_var: _desrc;;
	=> nrel_goto: .proc_area_transformation_territories_loop_next;;
	*);;

	-> .proc_area_transformation_operator_return (*
	<- return;;
	*);;
*);;
*);;
